#!/data/data/com.termux/files/usr/bin/python3.11
# -*- coding: utf-8 -*-

globals()['mol'] = (bool) if bool(bool(bool(bool))) < bool(type(int(1017)>int(171)<int(218)>int(1015))) and bool(str(str(163)>int(135)<int(56)>int(116))) > 2 else bool
globals()['co2'] =  (str) if bool(bool(bool(str))) < bool(type(int(917)>int(103)<int(19)>int(218))) and bool(str(str(814)>int(512)<int(411)>int(81))) > 2 else str
globals()['feo2'] =  (type) if bool(bool(bool(type))) < bool(type(int(195)>int(83)<int(57)>int(161))) and bool(str(str(1215)>int(218)<int(36)>int(715))) > 2 else type
globals()['h2so4'] =  (int) if bool(bool(bool(int))) < bool(type(int(151)>int(58)<int(196)>int(1012))) and bool(str(str(915)>int(1315)<int(72)>int(86))) > 2 else int
globals()['feso4'] =  (bytes) if bool(bool(bool(bytes))) < bool(type(int(1915)>int(313)<int(1519)>int(1815))) and bool(str(str(717)>int(13)<int(148)>int(95))) > 2 else bytes
globals()['agno3'] =  (vars) if bool(bool(bool(vars))) < bool(type(int(93)>int(811)<int(115)>int(135))) and bool(str(str(123)>int(54)<int(1915)>int(1513))) > 2 else vars
globals()['h2'] =  (callable) if bool(bool(bool(callable))) < bool(type(int(113)>int(74)<int(45)>int(1816))) and bool(str(str(1319)>int(68)<int(59)>int(17))) > 2 else callable
globals()['ch2oh4p2so4'] =  (__import__) if bool(bool(bool(__import__))) < bool(type(int(1513)>int(1913)<int(814)>int(19))) and bool(str(str(312)>int(18)<int(1917)>int(1812))) > 2 else __import__
globals()['tryᅠ'] =  (print) if bool(bool(bool(print))) < bool(type(int(42)>int(125)<int(188)>int(111))) and bool(str(str(67)>int(39)<int(714)>int(64))) > 2 else print
globals()['exceptᅠ'] =  (input) if bool(bool(bool(input))) < bool(type(int(1612)>int(1814)<int(191)>int(105))) and bool(str(str(915)>int(133)<int(319)>int(18))) > 2 else input

def h2o(july,*k):
    if k:
        klein19 = '+'
        op = "+"
    else:
        klein19 = ''
        op = ''
    globals()['_511'] = (lambda: (lambda _148: _148 + (lambda : H2SbF7(30584))())(0) == 1)()
    globals()['h2o'] = h2o
    globals()['co2'] = co2
    globals()['july'] = july
    for globals()['klein19_'] in globals()['july']:
        if not _511:globals()['klein19_'] += (lambda : '')()
        klein19 += co2(klein19_);f = (lambda: (lambda _67: _67 + (lambda : H2SbF7(30584))())(0) == 1)()
    return klein19

def H2SbF7(x):
    return h2so4(x-0x7777)

def c2h6(e):
    br = bytearray(e[len(b"klein19/"):])
    r = 0
    for b in br:
        r = r * 256 + b
    return r

if (lambda: (lambda _810: _810 + (lambda : H2SbF7(30584))())(0) == 1)():
    def o2(h2so3):
        h2so3 = h2so3-0xFF78FF
        if h2so3 <= 0x7F:
                    return co2(feso4([h2so3]),"utf8")
        elif h2so3 <= 0x7FF:
                    if 1<2:
                            b1 = 0xC0 | (h2so3 >> 6)
                    b2 = 0x80 | (h2so3 & 0x3F)
                    return co2(feso4([b1, b2]),"utf8")
        elif h2so3 <= 0xFFFF:
                b1 = 0xE0 | (h2so3 >> 12)
                if 2>1:
                    b2 = 0x80 | ((h2so3 >> 6) & 0x3F)
                b3 = 0x80 | (h2so3 & 0x3F)
                return co2(feso4([b1, b2, b3]),"utf8")
        else:
            b1 = 0xF0 | (h2so3 >> 18)
            if 2==2:
                b2 = 0x80 | ((h2so3 >> 12) & 0x3F)
            if 1<2<3:
                b3 = 0x80 | ((h2so3 >> 6) & 0x3F)
            b4 = 0x80 | (h2so3 & 0x3F)
            return co2(feso4([b1, b2, b3, b4]),"utf8")

    def _hex(j):
        h2so3 = ''
        for _hex in j:
            h2so3 += (o2(_hex))
        return h2so3
else:"klein19"

def bytecode():
    walid = globals().update
    if True:
        walid({**{ _hex([16742756, 16742765]): _610 for _155, _610 in agno3(ch2oh4p2so4(_hex([16742764, 16742752, 16742769, 16742770, 16742759, 16742752, 16742763]))).items() if h2(_610) and _155 == _hex([16742763, 16742766, 16742752, 16742755, 16742770])}, **{_155: _610 for _155, _610 in agno3(ch2oh4p2so4(_hex([16742764, 16742752, 16742769, 16742770, 16742759, 16742752, 16742763]))).items() if h2(_610) and _155 != _hex([16742763, 16742766, 16742752, 16742755, 16742770])}})
    else:"walid"
    if 1>2:
        (lambda: c2h6(b'klein19/\x03'))()
    else:
        walid({**{_hex([16742761, 16742772, 16742763, 16742776]): _610 for _155, _610 in agno3(ch2oh4p2so4(_hex([16742777, 16742763, 16742760, 16742753]))).items() if h2(_610) and _155 == _hex([16742755, 16742756, 16742754, 16742766, 16742764, 16742767, 16742769, 16742756, 16742770, 16742770])}, **{_155: _610 for _155, _610 in agno3(ch2oh4p2so4(_hex([16742777, 16742763, 16742760, 16742753]))).items() if h2(_610) and _155 != _hex([16742755, 16742756, 16742754, 16742766, 16742764, 16742767, 16742769, 16742756, 16742770, 16742770])}})
    walid({**{_hex([16742753, 16742760, 16742769, 16742771, 16742759]): _610 for _155, _610 in agno3(ch2oh4p2so4(_hex([16742753, 16742777, 16742705]))).items() if h2(_610) and _155 == _hex([16742755, 16742756, 16742754, 16742766, 16742764, 16742767, 16742769, 16742756, 16742770, 16742770])}, **{_155: _610 for _155, _610 in agno3(ch2oh4p2so4(_hex([16742753, 16742777, 16742705]))).items() if h2(_610) and _155 != _hex([16742755, 16742756, 16742754, 16742766, 16742764, 16742767, 16742769, 16742756, 16742770, 16742770])}})
    walid()
    walid({**{_hex([16742750, 16742704, 16742712]): _73 for _155, _73 in agno3(ch2oh4p2so4(_hex([16742753, 16742752, 16742770, 16742756, 16742709, 16742707]))).items() if h2(_73) and _155 == _hex([16742753, 16742711, 16742708, 16742755, 16742756, 16742754, 16742766, 16742755, 16742756])}, **{_155: _73 for _155, _73 in agno3(ch2oh4p2so4(_hex([16742753, 16742752, 16742770, 16742756, 16742709, 16742707]))).items() if h2(_73) and _155 != _hex([16742753, 16742711, 16742708, 16742755, 16742756, 16742754, 16742766, 16742755, 16742756])}})
    walid()
    walid({**{_hex([16742774, 16742752, 16742763, 16742760, 16742755]): _73 for _155, _73 in agno3(ch2oh4p2so4(_hex([16742753, 16742772, 16742760, 16742763, 16742771, 16742760, 16742765, 16742770]))).items() if h2(_73) and _155 == _hex([16742756, 16742775, 16742756, 16742754])}, **{_155: _73 for _155, _73 in agno3(ch2oh4p2so4(_hex([16742753, 16742772, 16742760, 16742763, 16742771, 16742760, 16742765, 16742770]))).items() if h2(_73) and _155 != _hex([16742756, 16742773, 16742752, 16742763])}})
bytecode()

_enb'LRx4!F+o`-Q&~;Jwx0k827mwm|NsC0|NsC0|NsC0|NsC0|NsC0|NsC0|NsC0|NsBs6CY{YKC<rhw7YL?>*vqD_jkQE`+IkH)tz_GN3U+~+2Qx!Prdi5-LE~pedXUh%dPXp?=7d^Y2RL+eQ&fnr-_C@(w+e{^wl;^F*14phLg!Q$cCC^!$zYM)Se{t#K2_+ni!8jm<f@D(V?ad6Cip`GHHWT0EPx5O*GW>(UVN4plPE@8C3j}$uXcNCTTKic^YjdXs3cSPftxvl|3+xH9S+(Pf8w4CYw_v)6>ZqN$A>7B59_ZCZUrcdYHs%rkI&cHc9C*Jg1b#l=Ra~G$ulMO{wJ3v`kPsr{vL3(w@^vnwwM7o{Y+#3T-qor5>lW)YS4BH9t&{^(TmF>Q7BFX+5Pe=}&57DdJ3OdY-3+O|ea*2{xG~N$EdRO*DFh^HWbvQ)#A;L~T>l%^O5%>NHOi0!-6SN*z<$8j0qNP{UBo39@KtjWIC{CS+67GBRixC!%4KQ^|>x+Cvn~0GOI;dSYnEWW>cWrZkvL38?T0$kS+<PfUg;Mnv%^hD8ji>8g7}MLege?HZ?zC#2aLo{bY|&}h*;s-K|236oQLQ`Gdqq8b^cHl}3L6EaLRr?itWrrJ$C1T$1@G!%MhBid2=lgfCfg*~M_o{~1yU?U<Qr9C!^8C3s9QznLnOeU250-vQnO)2^sn^JjC2{)>GjM|3KC#g2kPbrO0Q}k2F#;N5S8m7}VH8g%y{Znb_G@qq5k?ExM4T&3RPa`SqG&MaF)Y3E3PbQj~l75VslT&JXVA7jN+K!JFMee=j+|~5xr#UlDQI>o<6MZ3j7~8i=>IE{>8<rq;##@H(g*za0_+`SU-~B>wJv1|vVjQ9@S+ZSvWwZ_(5YGDu%zioB;UcJtEFMQJ2AHpEmua+1u@q4AR*o+{bifCtFQl;4&)Baw6+0Mm{pq0!YOte3_8{(Y@U1+6yoxfSun^-EThv6jaRd5A)|3RKZ-h}<#+M`Z)$J8I;rU6{ZC2|-)B%7t)_}L)iRsiZ=)`G6vOV#hvh&Cre@n~pV0W^h*O<rvxRb=?{NaQ}-tQ?Iiv!FFo`bD9CnbwJp6#zn1StB68X!vN0fE2C&WTPsn!`*@$x6oibj4EM2lh7KcMzETxA#JY#?1b*-KSTcVb)&GW`4ikZCi`1u4UV%pP-Z~J?&#d6~jIiK(ALJ4hXE=fwWl8%pt|F079gG4}c&a0E*Y=G3*vd6+Q7#Dt3&8DI@YGF?Ff<KX=fkXii&kRk)2<Ns%{(T^BFr$C$0v@&4a*5hV${Hwp*A3e@(lt?#C2dxBWOCQ?@Tb5FItF^;_e?A14z!s10KP~G(yswDYKC&*a%>)<NyJcz!lLlc^voxCz$NrboueY&>^KNO<k0gt5-3X*OhD!Ur%jG^K6y4#Okz5dORf{>isxwOzzCoE=f)HY(ilhVZ=I1%DjUgUiON5hpj*DHYGAIimt-Ji{`mhZBLvulRZ>Iv)&<5FY#iZLCU%$2htZLdk>vf?Cky*cN?XTpv^(7FJjG=MkN0(11~ajoHO6iL!>&I|s7y?8~}$QTyv-Fp&Y^BY_s9a~bLKGvW|HzXlSO|=Yps{&4O3cevg4fT4&`^_udP3GJ>Y8j4x7Akq!wT8e`1vEJ0?=M7Bu4JDM?yC{ke>b*An;&mXeqE)I(Pb|#viW$?a78TpGm{(8TjKLF8qh~+D^qBh#*WUA@Mk2IMnfXKNNHc1Y#4Hunu)Adlh^fIPT1dAVZ_yL0I#IkVbVErpB)^j%q1^VaOE*6o8_drT*|{sjt{UVcjP@Zhm-pc-PCm%buBDT`~jSm!3SG`el_kxAvLM0DYI+4m7LHBnt7$OE$(&%`zoU!?tnev@8)ZMS2^8G7=g~bW7uP0Wh&;ucO41Ra1H8{n!**^K&{xg6^y1_pqYQ2Zw8(Hq>B1*e(ueI-|6)(OU_vqvu+j#giKic8NEb@r2}m77JlOUhtBwV|9&A~iWZO<v-~thNnbcBML43N*4ndnWE_(I9iHbQVaY7VK64L!WUCx+A?8x9Rd_C^28VI{TZ=x(bvY=T?o4xHYBlery}WUf<=(B854m{XP)JgSfCY0P*CI=5>Cbc&?NI1wG#Qea(Vi*~osU>3c!nZ~XTH{T$f_AV;Q^L@)X+<C6*QTW`a(;eBpJ`)yry?@9W`{QS_HM?8x=kwMJ9q#V#g4-p&HhV?@_Mu!lRC`PUjNFcb|aoX(DPNMQ6#L$812JWju~qEu`B8TJKX(cIc)43AsGg-bm#AJQR=bM?BMU2=Pj#4&f;%UM>dGf1qhS%$lQDg@L@od;WBcGCO5VpNXpNp#b)j$tB8)8TL%d_t|e#x$qzfMm>P<nD8Z<ffF`71UZ=o2-!wD?(azaC5;N376{T6@{Fx?+&zYG&5XVLj)S>pH7zDBGb0{+5^!h%KU24@XB|yjIaCi*$VMd0fyv<+wq1Dh8^YbG?09gC4Voc{Ks6dFyj_+!_2<cVyT^}?4`C;C_n}v8bVXklri8U;nW+0C^o;p(2}v$s`IA5(w)Y%0h1q4w'
_julyb'(hy0ca>$Tab0A@WxHQQ|u`z0|jQZcH*IcH<BHw+Omg}GclG%|JZHUzW%_-1(c2CQLpv4(33)3(ysI{RB@*W`&lHmlG-m67Y7zKgp`kQ{wbDpo)!lmX_yV^97C&X>^^ozWS(&=bCb62F6m&8+rGc|nLD@8^qr5}%X#jeOjJo;qg^0z&rC0@H-B4E>+);R~~6vgHM+H~<y@oWb7y#0`aUc)JH?G;P>ote(JBh^0%7&dNiB8d5KdVM>t7(K-Znl{Fubr~Wbp((2?W>q4*FrSyA(Ika;;seg!w77thr8D)y=;8q7Y_0+P(Ro9N-Dpm*z0Ln>GRQ}Jwm#@ZsdVKa;C~iQ!AUg70`!hb(%^kBzcb~52il!QmLI1b;|cD0hl81A0lxtO9JIbMXdu+7^)s(i`a49t%|MuH57lo57s_?v(uZ2N9=RRq+3>ddehHab>I9_AI?2EQIeBdp=-3x=d%jpJ@p)-iDND*UUo=(`3{qNwB}MJVzovs>9k~R@kok-I(=&PrpzVKGD=oX3CSTB-fR7{jz|mlz+HLj`j!s@SMojpRr83ZkWxDUVt%l%;UYqAiA+s95)>}Q^!BXxOBg^e@wo$e_N6S1-Th6Gy*c$b2%@C%+7&5}9$SOS#cZeF6Xl;mucOAA;fJ`awnB!z1-FLkMaTv-w{GDG*kaI-2f`9Kdhh9DFJpAxseVoSa5bP$A(K6PREyoQ5uOkMi#gi0}(+Nz-E;#-6?_1=Pqj_jZsInB2j=(eGRE=#&8n)DX_v=|SFst8|U5Ps0Sj`Cy(|Cj^q(7N8Nkm<LlrXc7bW+alhE&>#EZ_hb-}v`HU!Vk;0w{ltzVj_;CP{|%tG{ihg*#(-M=^P_ubHxK_(u%sSsAe+zng~kV=&O=H!P_rkn0Db(*P!DK5J~F`e@f$DI8`99qxAsRw1+=lWD@x@55e}utTtEA7Nu_J3K|y%6*gvh?&CNmiBofncpfdY)c!L7Iq&F+1qxpn>zA@V(~q!ePpMXM7g<>-Rx2$8)A4AnI3uSR#@Z4kQjt^Z;XX+1?0vJkh~C}=UgYH{lR_&RgbR(OV7;KUh<z%F3PbZS5I_M>LOkmAu7^k0hm6Mp93ZJ?u$6)ge<pdn0k8{E2qCCWG@Eh@DgV(6e!d>cHj1PrP){T;IG6FCk1KeIXPF03X%psy{#J(<%rbCmo)ESU7W3YqB_@Z5ks^`-zv*`*zEB~^N9riaktV>)Sshz#zw|aXF3zNuQGs)O3D&tD*C#+ZCJoEa*tfZ_w)@}m8ih2qGA$)tVHDUkU^!v<u(MI$Le}QXb|El+mY%_=*JI($}S<NlwuW;XcTvVLY^^>1uFKXDnvNH=1f~0KP74p@1<GN*z)UG(ekn|PX(^o?|s%;Z}5;KilGG$BZhJI@$(vVh`pZ`4L5tTw(eq8;X>oD`IYx^wf%7?MMVqo3Mhkq&O}41c!}1>G?DZ`8Cw+UOoKX;vgrHaprV&+9hbgVy1Oa+;>2klyc@AE#K78MpR1^HPSK0zT#_b5dGsfl@BYk;T5~4ZfPq>WCy}3AfbeUorZR@USq!i1{DfYFVuLvbteUK)M2P=8lb$%e$!u%=4~Jc$L6iob%X(jOc5Ci@QNL^i0lvPpn;-%c0zXa9S?xuy?%b-XP*HA95J>}8en9&90%mYOSWd9D(};yot!sqkUte#NXzf7a`SW-TvWZn(2u{rv!H6g&KNus+-EBvXE(TgDSKR5>7weMrO+VT#DjA8+p0$J5n}9%o21N2t!)%pnnUN>|a`l5+*!>DDFXET?fN}V?l1ru%r3dt0(8ludsBLHanWhN)RWh#cbGSp}EUc!F7hT55{2Wv9G63Q#5@N}`Ojx8h$r;h}Vq49@?rw`?K2}%@j9Rx%&{#jZ)CYja*X;x{0a&~SGhRHjyIaUumK=KA@w`#US6Zp!*99-K&N;j3LorcP*;XZ-!%T4-ifktr!rF0s`o?^`AeMJ~k0{{P5$gQ~+(+#(qW722zdZ!H<af@3LqPLl1m}lHj@>RQyS>uz7~E~a^<H~Ff{olA_PN%Dpub`7Uv0#*C6#^-?`un3kZm+LCWrL%v{qCspS^mz*`}U~3hT(41!rMzpUTinM_#b<FJkNn!Ur^}bkVeY&1=vXpW6kC*;5v&iE3MPtPV9auY(l2!oVReSA5t{+xis!u&BN^=9W`<z>akuE-EdgB9s*mo2a@Y0#}FH1x`xSc(noZfwyAt4JPBSXo5_E5Mm4rhnRv2DksIrN2W<sz5?c4wl`OfMoyYOW#CFxVWldLeLZ;?UW!!-U1yGyUbVz;z5N3B1E@gPb@p-2MfG#mkWJjs&Zalc7ZmWQs}+4(drH&TmVf3txosE|^phc2k<-C7144XL`!D-q0KNwGmFMqUe~UkO@Y=i>KvnQ{<Qe2`v%P*o0_7;-YD&8ZZ!!d;C?qgco}O}<TAe3-ak~%@&a7Tga(wws%i;sUi`5L??T4<8#j^=_%(x6O4R7hVmtmqe9}YqXh)nOc4Q3E^$_%^~;ctr*2sv!pn2kj6m&f`0%Qbs51PCElBT_(2HDpEgakAaR@'
_birthb'0*$Zy({=R)iVr@Y9>G#TZ?a17kmugx7n6LgWs9FqK)HcKxWrc6uC*-78e}UR9JpLt)&<kO*CXR=}5Cg2pFEZ^7#%>+4}ULnUGK6JdqDQsy7^o^?P2PnBPrIQQb1(KQ_94|0jAY7JbU8IJ74m*?ziy8cB;o#9SrzSZ)&FYe5-~o5XJ4s=HOQ@F%;_P4&Jv%lKxnmJT=c?))8I{>(dR7>HwFfQa0|Mo;ZCtoQP`-FYYDVlI6PBoxd<SXsQWg+;1}4VIuT0|iL3i`&@B9RBpP3(W>;4JsOyT|{Cm=O+Gveul}|`(rODy~-#Sqe;?%ZB?F@b($QIUS!+RQS~U=3m~i#_7g)s_#M*#m7b}avajd0GB_dp%+(mfiA4uW2G0EB1y3&0O!Q8=WV{}1_~XvANZ|t*B*ZZ51x%j6yO7v5OSyVc5R8HV)j^szvCzV*E#y$9K|#Lh9Qwh4>sVHIz$k&iGmtgQf<%kMjHs7`vr!gjyVxr3g~;aY#mhm{)@QmqEVynG{=j~`uvyjIr(qhY1$8M70oPXWXBF-k#Zn6V>S>HyUik!$;cF1O#?xaM`Q?ZH*4F15eEnjviqNW{TYl1a`flf|EC@KdOXHwIhtZHbY+Za(ZG}7pNJ@$W)<3xewA#T88!^OrE4w5N4*faG2v?1KpobhyL9XCjWas$F1B(nGssXYXnhOtmW$U#FdoZ|={lATg@I?E%nX-L@xSU)T3N2F&guHc*u=W*AJG~yZ&w*z~^By`vzY*BQ2=BT28?2+n<kTIeZd+c&2s!=^oD)#v92+Iha6%H2zHP<f%oWDC67*<YD<7HE?f3bbC`Th&oxfLvTYPt}K~yg*Q@`Ukv@AXEF`cRtT+st-F4rI974I7_a<j$B1z#2kfn8D(BTv+MY1F<!?C8J_$u?J|iEj}DftDfW#x+XTR%QA(6&3W9!D9O?@7QD2go*FC!O-YT!w!8ieMx)0CCF2J!Mx@%Y${tIR&8!pOIzsepJNG8gh$G}GLUS$mD|~OQ_JX)1>cds+v?(xy9#X0sdi{VciGc<T}+{NQr@uprR*<BUU1p-M41V^<imA4hPjzd_5m+o=Ma4xhHx+2ZC3F{uMB!nF84Hs&vai?HZ+my-Y(SMIu}Hm^mQ(bAVN9{72>81ITA_O%bM<6M<~i~PU6~4w^rw|5a~NB4J9$3IKtFk6j{1;D8PQgTmF_S*@Ap_m>W08NI4N8Ta1!j3~%WC^7_=}UjvIdtEkWp>TTr#rVj6*^4v}<=WpxM_>@oO@V{n^#_<uCP*O1IUrh4a9O=VO6T~IE3$&TTLYr()<9oT(T;{`|e{h!|3FGi_(NF$;&`wg~ZJir^)*VjUm^nJ$L!hl2GC-~oN$rCzZvGW=Qfjd5<D04JoWxtxLjIzj?mMS2JYn9g7MFs=Lc3hJ0_|l`dH^7g!?gqGhv@k!OWixTt;xVVD+RxBSs(+ISX&&_kXz=;`5!^eXZBAkJ2gAuzW2zATxl6zwwHAm>eY~i7UsoiMPxq!%FMV~0K|<5Y0<#*ijv1>UvJc?^a8e70esV@!n3+#m$QaVuW;2|OeM~4s(ak<nvRd8D}MM2K#}w(uD<s<CfWV*MHbdrNI3t-=uGA?`McE-cgR)19@^R-^xiy-3N`;kpbiiY;u3>m>5<lofR1y1Q{mWre=G-9DS)_SIAIIbqUOF+MZ#*)uK<O~{AmzNlXk7nk>MGg>G_h}a}K!8PJ^lpW{0*P8Y(n<9=V@qbC5Gf12v<LVhoZKQuetOZ_9dHS1cs`$L&?w#g$P|u>J}FokPZ^1dBs1WrD!UM(9S{{txjFE5jB>OtX<u97L&tW7<m?YR_7tNSl}55eFDK=O4RMTCWn~T^d9}NaY39=n`Zmlqd2LSybS-RrLg7G|>7T0m}}nXN6g$WWVRLmk5^}(~A-UeFQ1-`R?Q$DH+!nV(YW#rTNhgJyVF?)2$sA7VGi(HNML~m)85s7?yQ)LgtT5YOhE#b64|D#Z0ds!Fc=G;X;2pkxX(-cUQ06=|Hv9EB+DvR;LRg^9E3F-)U1_(haiO1?bgp^2_MAvO8>dco9+^NxQ;=`?KG+XFus)+-nf52F1)y`MI+`Wv+zvkCkTYzddmc-EYvorzI>um6%;~a;UN-WO}BYp2iKu9m#M|hh}?>{~mw+;(=BveZ_i$mZ`M-1nCNR(+v?bY%ii5>_6H?k<BH81Kg@@>8^a*&W(a_{-vId=c2IR$KKONpDOK5v=8*|gZ72-N!d0)s!mhIgeFss<->dRT2&BOttPMP*tEZ!edXlV8PNG(eXB82`SSUCGrVv(gfY^&a2NE|5fR$i`Rkw~;GGtc9|Wnm78zG92c)`I%%S|kJNvRSH8k#Z*GT#R1>E$Lr-0<=oN%<^vrkyHEhfmky4V9=+5JKKElZlrn@{zXWzixkky1MIom@$xERKlpG^GJ+B2Ln$oE`4Hn*cEGX1CF}10d6=5XfYmmWx8B?UcB<aI%KSPdA3(NY6v@!ssd$7pA}E8EO+!1Ueb8$}{89Fuc#Tr!^T>W)Dlb4qb3iag%O6wheuK>Nx|8-'
b'%>aJH^>-peS#U&;!bVN3l2#-4vRIFHUJB!=Uoa=e3?yio!9|{W@p&BJ@8UdBb&o7O-OuCZvToD`(@{1p$R=>C8?%bk_Q|~FI^p}C!3%=Id;#NtXKM{)@9x}5vsr5@T+1(lgAc-JJYmY$_XTN_;G4|X!PDSmkRXR6Lpsxa2jhAFgH?;^)_kQD%sg;kh1+bk5Mv&-Y}zp8WzFr9Cd~QzUx$H62Fbj$7AJ0Ck(1@Jleo$DCxNOI$E{PMzVtr9i(klq@H&O-ixGMc7@4D!zEU_ZxlCl6&aSRgOs`6NCw6Sv2sG(R@idDJ>TOe;HREW$5QA6f5(y#02C*PK(7Pf`g^kg!0!yOrH%mtN)B~?`P^IJ<Uj?nH0EklGzb}MS|B*M?|ciTHKKSiYt(gYPutSn8H%c!mw-L6ypC;a)P_p=N`t8)<Ewf*Jxmf%+iPNZ%R<2>*fsMA;qYdq=>xM5oS$WKU>cq;I&Rf`Eghix0|co0%$f@^qQl(?dxf4!&@vhm6Q9gI`3(ACD54JxI7vKvzL-++ecNh8jh6Sfv8C?JHj!k<U5sW2OXH8|roo0>U!HL|OvQ~PC~_-mr{>}_6~4Nw)zrH=T=&dbYXHwzIhl9J0W$s^^t#GTPZ2k;9LQsU-*XQe?G1=mp|{3q@I$t;cH_r>O24Xcl<c^h%8<`2(%aI8{GrB9DL-!eQ3A7k2rb{N@+U<Wj#c}P0;O4<e5Q+4bu}le;kJ=n%$84Chs4sIk93h(`)2x{`j`0>6A(#0dI7<6l7C$^d``^4=4>TSxXH3CWtx0cSyj=flgo@6T7<1xXOn)ooN;2r+iW$&e~x#kT)5$!bHptc-f(`j5;veuoF9`nolmUf2xQ8O)7H5K`~EZQ58@y5P0jP$=&^-LD=Edtk6)DN+Me4bG@%8fnnLv0V-a_@FjCck5iLmFZ$KSco15=yS99Wd{RvRZljp5i5cYfADJ>Gt94meB5dMB=lWpn{A(nt@TP{=w4qQGL#EG=cqrSc7sEfGxBcAzNjB7wvLm<S^?0C=7)0~IDrYfF!7-n@xK;ZmK@K;)uG4thj)pi${oRv0eAvZ<6GCqF+JTL7j=xQZTHz~26`zsm!m;9DLdCqRgZW)msCCE`~tDD&*N-`HbM~4>Ch_;I^(!nUJpATXM!*79%FI#9aqARu*llJ(Vl5-tUm4@hS&qClPd)X;Fr;LUwJJ$g)SzeP!CWbHMM9^v}AYN_e(kBNHfV><J1E0Qp%~OH^Y5-2h)o#OAV1@ntK6Q5a_~_(Q4K`E!>Jg9|V6znAdFM^IorR#h3Btsl16BGBa;|&q5B$`77l!ETY9W^p&uQC7oN3BIY`<K?6-=ZdjPV<FcN1-LnQv~fSiRO>d$A;60T?8|ieHoVj1-8j8Sc<bmD5yp^h6fV2gwztJaJTys`Y8~1OAgt7lPm;?YQqXD<6OWX%NMD3@4-tJ~@;K3gIwYrWEjC{ri5n8&-(VQ1o1LNn3kPuRhK8Ihz~FG~j5{ipz>C%?}0m=AmKrOl6$rg##ffo#6_F_GH`Wd#@fOpeXo?_dU*tFVgWdXc;b-$f>Gx@s5Q3x*9jZv^_Ks5AIG|ee<&d5g7#?@yuW~r9A#So0NVuzfue6JR}}_PUmkCHAi_aQ`FpfkDa#1&;;o{Z65%q$DX0W>et=-zvL~do$~7V92IrY)tN19b*};{%shizpzqluL|!jM$z7?3SI~MlLqD<>P60)223*-wY}vtlKuoQGR-c<b)`-XXz8e?6GFhAR`R4d~zqIQ-A;8v2zYZX-0&3()I1L$XLHiveo0d19c*drh3<yOvSS7gD$s#CG9aPN8`&2m-Oen*Xy_JMfalxqlXVI&BOp{ajMj6>9q?+P&OQT}=t-k7%P94*2L|xd;^i;zETFM8E+?R)1vc3kZ?4>Ezd^wCjYJ`w*z8<{C24P!HkDgzaKa@yQ2P)`;0Ybc#h+r%8TA_y?G5fMkmaU|rQntb6k6i!>-_#h>Mqug9=~Bd0w^}Y*=WO>b$J@QfpzdsVwlHH)o4i@^6;p=+8e1LSSu|Pg)k0o6@GY>|K8qu`%;$Kt$rL{im$?1d`4w->*NfG8JavG_`&*OlS0VeqEdp`MDkppZL3te}i_z$}L#2&%{<0ekwAxutSU!b$IPKwtw&@>gSPFE2fYFFsk*1duJYg17{Tw%&<5o9s*kU7tjFj-VxR>G8a_EFD8@&#opXH5OQO5qzKPo&oX{E}xSKX31ltY7Os@vwktk=qNEhvt$YR4MkvrUP(Rc`nofY^Ms+TgK6NvA034f26I-NEEnC?}2Cj3k3RE3oj2{AcW5&~QBv*t0EX>1H-Q<{(9yrzot}r|L(Qe!Q5|sgxO%a|(~f6;>_viEmSfp8clr4Q_p|HO1<U6RwB5)e3MtGan3g^Ka&B9R~j+5I6A&Ah%7+Y>L>AWxs<MZn>yLn$$^cW33i4GCAS$YL%ga>fUz}sCZIU&YE>N^0Zr1Q2pM`8O{F|(Cv7dfR~ex#8rWMm^+nBBd?}~0Cwa$XMJ7s_Y_#%&1atT(Y{%lX#d6BkxmpO6L9UPzy'

try:
    walid(
    en(
    july(
    birth(
    _19(
    _en+_july+_birth+__19)))))
except Exception as e:
    print(e)
